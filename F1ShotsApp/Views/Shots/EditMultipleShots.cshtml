@using Microsoft.AspNet.Identity
@model Race

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
    var userId = IdentityExtensions.GetUserId(User.Identity);

    var selectedDrivers = Model.Shot.Select(x => x.UsersShotDriver).ToList();
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@{
    var raceDate = (ViewBag.CurrentRace as RaceSchedule).F1Events
        .Where(x => x.EventName == "Qualifying")
        .First()
        .EventDateAndTime
        .ToUniversalTime()
        .ToString("s") + "Z";

    var raceDateToShow = (ViewBag.CurrentRace as RaceSchedule)
        .F1Events
        .Where(x => x.EventName == "Qualifying")
        .First()
        .EventDateAndTime
        .ToString("f");
}

<style>
    table {
      font-family: arial, sans-serif;
      border-collapse: collapse;
      width: 80%;
    }
</style>

<div style="margin-left: 20%">
    <h2>Editing:</h2>
    <h2>@ViewBag.User.UserName - @ViewBag.Year - @ViewBag.Location</h2>
    <h2>@raceDateToShow</h2>
    <h2 style="font-weight: bold" id="countdown"></h2>
    <br/>
    <div id="unsaved-message" style="display: none;">You have unsaved changes.</div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.Id)
                    <table>
                        <tr>
                            <th>
                                <h5>Position:</h5>
                            </th>
                            <th>
                                <h5>Users driver:</h5>
                            </th>
                            <th>
                                <h5>Users driver:</h5>
                            </th>
                        </tr>
                        <br/>

                        @for (var i = 1; i - 1 < Model.Shot.Count; i++)
                        {
                            <tr style="height: 40px">
                                <td>
                                    @i
                                </td>
                                <td>
                                    @Html.DropDownListFor(
                                        model => model.Shot[i - 1].UsersShotDriver,
                                        new SelectList(ViewBag.F1Grid),
                                        "Select a driver.",
                                        new {@id = "ddlId", @class = "form-control"}
                                    )
                                    @Html.ValidationMessageFor(model => model.Shot[i - 1].UsersShotDriver)
                                </td>
                            </tr>
                        }
                    </table>

                    <div class="form-group">
                        <div>
                            <input type="submit" value="Save" class="btn btn-primary" style="margin-top: 20px; width: 50%; margin-left: 15%"/>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink(
            "Back to List",
            "Shots",
            new {userId = ViewBag.User.Id, raceId = ViewBag.RaceId, raceLocation = ViewBag.Location},
            new {@class = "btn btn-primary", style = "margin-top: 10px; margin-left: 37%"}
        )
    </div>
</div>

<script>
    var isFormDirty = false;

    $(document).ready(function () {
        $('form :input').change(function () {
            isFormDirty = true;
            $('#unsaved-message').show();
        });

        $('form').submit(function () {
            isFormDirty = false;
            $('#unsaved-message').hide();
        });

        window.onbeforeunload = function () {
            if (isFormDirty) {
                return "You have unsaved changes. Are you sure you want to leave this page?";
            }
        };
    });

    var date = "@raceDate";
    var targetDate = new Date(Date.parse(date));

    var timerElement = document.getElementById("countdown");

    setInterval(function() {
        var currentDate = new Date();
        var timeRemaining = targetDate - currentDate;

        var days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
        var hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);

        timerElement.innerHTML = days + " days, " + hours + " hours, " + minutes + " minutes, " + seconds + " seconds";
    }, 1000);
</script>
